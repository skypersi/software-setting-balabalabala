/*
0.Doxygen提取文档注释
可以注释的对象是一个类型的定义，一个对象的定义，一个对象的声明，函数的定义，函数的声明
建议是仅仅在类型的定义，对象的定义，函数的定义处进行详细注释，对于函数的声明可以只进行简要注释
这样可以保证注释只存在一份，在变更时只需要修改一份，有利于维护。

1. 前置文档，格式：/**+空白（空格或换行）+内容+*/ 
内容是包含命令字的描述。关于命令字见第4条。
文档化一个 C++类成员，你必须先文档化 C++类，这同样适用于名字空间。
文档化一个全局 C 函数，类型转换，枚举以及预处理定义，你必须先文档化
包含以上内容的文件（通常它是一个头文件，因此才能将其包含的信息输送
给其他源文件）。让我们重复一次，因为它经常被忽略：文档化全局对象（
函数，类型转换，枚举，宏，等等），你必须先文档化包含它们的文件，换
句话说，必须在文件中包含 @file 或者 \file。

2.后置文档，格式：/**+<+内容+空白（空格或换行+内容+*/ 
如果你希望文档化一个文件，结构，联合，类以及枚举的成员，需要为复合体
中的这些成员放置文档，有时希望放置在成员之后的文档块，可以替换掉原有
的块，因此要在注释块中加入“<” 标记。
例如：int var; /**< Detailed description after the member */
这种后置文档注释放在函数参数后面也是可以的，而且有可选参数
[in],[out],[in,out]
例如：void foo(int v /**< [in] docs for input parameter v. */);
请注意：这些块只能用于文档化成员和参数

3.命令字有效有效范围
通常是这样的。命令字可以在没有遇到新的命令字之前解析后面紧跟的整个段落，
段落分割的标识是空白行。@brief可以配置成不同范围的解析方式

4.命令字
命令字是告诉doxygen如何解析后面的描述。
见 doxygen 的官方文档doxygen_manual-1.8.14.pdf-Chapter 24 Special Commands
*/
