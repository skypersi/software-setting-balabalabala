/**************************************************************************//**
* @file      ADC.h
* @brief     ADC module header file.
* @details   None.
* @author    LiQingfei
* @version   1.0
* @date      2018/11/19
* @bug		 None.
* @warning   None.
* @copyright 东方久乐汽车电子（上海）股份有限公司 ALL RIGHTS RESERVED.
******************************************************************************/
#ifndef _ADC_H_
#define _ADC_H_

/******************************************************************************
*                  Include
******************************************************************************/


/******************************************************************************
*                  Global Type and Macro define
******************************************************************************/

/**
* @brief        Make a Single Conversion.
* @details      Bala....................
* Bala..................................
*/
enum TEnum {
	TVal1, /**< enum value TVal1. */
	TVal2, /**< enum value TVal2. */
	TVal3  /**< enum value TVal3. */
}

/** 
* @brief	A macro that returns the maximum of na a and na b.
* @details  None
*/
#define MAX(a,b) (((a)>(b))?(a):(b))


/******************************************************************************
*                  Global Variable and Constant declare
******************************************************************************/

extern int16_t g_example_variable; /** brief description */


/******************************************************************************
*                  Global Function declare
******************************************************************************/

/**
* @brief        Make a Single Conversion.
* @see          anotherFun()
* @bug		    None.
* @warning      None.
* @param[in]    channel                 Channel Number.
* @param[in]    channel_type            Analog Channel or Special Channel.
* @param[in]    conversion_resolution   Conversion resolution.
* @param[in]    sample_time             ATD Clock Cycles.
* @param[out]   result_addr             Memory address to store the ADC Conversion.
* @return   	if initialize error return xxxxxx, else return zero.
*/



#endif /*_ADC_H_*/